struct input
{
    float2 video_size;
    float2 texture_size;
    float2 output_size;
    float frame_count;
    float frame_direction;
    float frame_rotation;
};

/*    VERTEX_SHADER    */
void main
(
	float4 aPosition,
	float2 aTexcoord,
	uniform input IN, 
	uniform float4x4 wvp,
	out float4 vPosition : POSITION,
	out float2 vUv : TEXCOORD0,
	out float2 v_rgbNW : TEXCOORD1,
	out float2 v_rgbNE : TEXCOORD2,
	out float2 v_rgbSW : TEXCOORD3,
	out float2 v_rgbSE : TEXCOORD4,
	out float2 v_rgbM : TEXCOORD5)
{
  vPosition = mul(aPosition, wvp);

	vUv = (vPosition.xy + 1.0) * 0.5;
	vUv.y = 1.0 - vUv.y;
	float2 fragCoord = vUv * IN.video_size;
	
	float2 inverseVP = 1.0 / IN.video_size;
	v_rgbNW = (fragCoord + float2(-1.0, -1.0)) * inverseVP;
	v_rgbNE = (fragCoord + float2(1.0, -1.0)) * inverseVP;
	v_rgbSW = (fragCoord + float2(-1.0, 1.0)) * inverseVP;
	v_rgbSE = (fragCoord + float2(1.0, 1.0)) * inverseVP;
	v_rgbM = float2(fragCoord * inverseVP);
}
