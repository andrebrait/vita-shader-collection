/* COMPATIBILITY 
   - HLSL compilers
   - Cg   compilers
*/

/*
   Copyright (C) 2006 guest(r) - guest.r@gmail.com

   This program is free software; you can redistribute it and/or
   modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2
   of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
*/

float3  dt = float3(1,1,1);

/*
   The AdvancedAA shader is well used to:
   - AA 2xscaled gfx. to its 4x absolute size,   
   - AA hi-res "screens" (640x480) to their 2x size or,
   - AA gfx. back to it's original size (looks nice above 640x480, set scaling to 1.0) 
*/


/* 
	FRAGMENT SHADER
*/



struct VERTEX_INPUT
{
	float4 position : POSITION;
	float2 CT : TEXCOORD0;
	float4 t1 : TEXCOORD1;
	float4 t2 : TEXCOORD2;
	float4 t3 : TEXCOORD3;
	float4 t4 : TEXCOORD4;
};


float4 main(in VERTEX_INPUT VAR, uniform VERTEX_INPUT IN, uniform sampler2D decal : TEXUNIT0) : COLOR
{
   float3 c00 = tex2D(decal, VAR.t1.zw).xyz; 
   float3 c10 = tex2D(decal, VAR.t3.xy).xyz;
   float3 c20 = tex2D(decal, VAR.t3.zw).xyz;
   float3 c01 = tex2D(decal, VAR.t1.xy).xyz;
   float3 c11 = tex2D(decal, VAR.CT).xyz;
   float3 c21 = tex2D(decal, VAR.t2.xy).xyz;
   float3 c02 = tex2D(decal, VAR.t2.zw).xyz;
   float3 c12 = tex2D(decal, VAR.t4.xy).xyz;
   float3 c22 = tex2D(decal, VAR.t4.zw).xyz;

   float d1=dot(abs(c00-c22),dt)+0.0001;
   float d2=dot(abs(c20-c02),dt)+0.0001;
   float hl=dot(abs(c01-c21),dt)+0.0001;
   float vl=dot(abs(c10-c12),dt)+0.0001;

   float k1=0.5*(hl+vl);
   float k2=0.5*(d1+d2);

   float3 t1=(hl*(c10+c12)+vl*(c01+c21)+k1*c11)/(2.5*(hl+vl));
   float3 t2=(d1*(c20+c02)+d2*(c00+c22)+k2*c11)/(2.5*(d1+d2));

   k1=dot(abs(t1-c11),dt)+0.0001;
   k2=dot(abs(t2-c11),dt)+0.0001;

   return float4((k1*t2+k2*t1)/(k1+k2),1);
}
